[{"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/theme.js":"1","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/mobile.js":"2","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/navigation.js":"3","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/desktop.js":"4","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/index.js":"5","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/App.js":"6","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/auth/login.js":"7","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/rootReducers.js":"8","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/usersReducers.js":"9","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/usersActions.js":"10","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/authActions.js":"11","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/axiosConfig.js":"12","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/authReducers.js":"13","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/categoriesReducers.js":"14","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/categoriesActions.js":"15","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/localStorageToken.js":"16","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/handleRequestReducers.js":"17","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/handleRequestActions.js":"18","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/list.js":"19","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/reportWebVitals.js":"20","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/table.js":"21","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableHeader.js":"22","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableBody.js":"23","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/customDialog.js":"24","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/appBar.js":"25","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/helpers/convertFormToFomdata.js":"26","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/menu.js":"27","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/userDetail.js":"28","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/category/categories.js":"29","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/category/formCategory.js":"30","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/formUser.js":"31","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/posts.js":"32","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/postsReducers.js":"33","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/users.js":"34","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardList.js":"35","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardHeader.js":"36","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardMedia.js":"37","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardActions.js":"38","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardContent.js":"39","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/postsDetail.js":"40","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardSwitch.js":"41","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/postsActions.js":"42","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/formPosts.js":"43","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/editor.js":"44","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/autocomplete.js":"45","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/comments/comments.js":"46"},{"size":299,"mtime":1607338542521,"results":"47","hashOfConfig":"48"},{"size":1978,"mtime":1607090610344,"results":"49","hashOfConfig":"48"},{"size":515,"mtime":1606491512759,"results":"50","hashOfConfig":"48"},{"size":3963,"mtime":1607090422050,"results":"51","hashOfConfig":"48"},{"size":1729,"mtime":1607413889459,"results":"52","hashOfConfig":"48"},{"size":1919,"mtime":1607414171445,"results":"53","hashOfConfig":"48"},{"size":5946,"mtime":1607000772800,"results":"54","hashOfConfig":"48"},{"size":499,"mtime":1607092007484,"results":"55","hashOfConfig":"48"},{"size":1581,"mtime":1607076270488,"results":"56","hashOfConfig":"48"},{"size":2348,"mtime":1607089549543,"results":"57","hashOfConfig":"48"},{"size":1136,"mtime":1606983444987,"results":"58","hashOfConfig":"48"},{"size":517,"mtime":1604927976078,"results":"59","hashOfConfig":"48"},{"size":870,"mtime":1606637967592,"results":"60","hashOfConfig":"48"},{"size":1986,"mtime":1607350571647,"results":"61","hashOfConfig":"48"},{"size":2613,"mtime":1607350723946,"results":"62","hashOfConfig":"48"},{"size":490,"mtime":1606404198737,"results":"63","hashOfConfig":"48"},{"size":1167,"mtime":1607156767954,"results":"64","hashOfConfig":"48"},{"size":778,"mtime":1607099453463,"results":"65","hashOfConfig":"48"},{"size":3846,"mtime":1607159753413,"results":"66","hashOfConfig":"48"},{"size":362,"mtime":1606310002069,"results":"67","hashOfConfig":"48"},{"size":5019,"mtime":1607156837610,"results":"68","hashOfConfig":"48"},{"size":1340,"mtime":1606833962753,"results":"69","hashOfConfig":"48"},{"size":2746,"mtime":1607416377800,"results":"70","hashOfConfig":"48"},{"size":1712,"mtime":1607157693579,"results":"71","hashOfConfig":"48"},{"size":722,"mtime":1606838443828,"results":"72","hashOfConfig":"48"},{"size":535,"mtime":1607011961103,"results":"73","hashOfConfig":"48"},{"size":1344,"mtime":1607159773242,"results":"74","hashOfConfig":"48"},{"size":1392,"mtime":1607247628675,"results":"75","hashOfConfig":"48"},{"size":4850,"mtime":1607153948580,"results":"76","hashOfConfig":"48"},{"size":4145,"mtime":1607343701901,"results":"77","hashOfConfig":"48"},{"size":16329,"mtime":1607354741425,"results":"78","hashOfConfig":"48"},{"size":5389,"mtime":1607248418889,"results":"79","hashOfConfig":"48"},{"size":908,"mtime":1607092105364,"results":"80","hashOfConfig":"48"},{"size":6167,"mtime":1607247278657,"results":"81","hashOfConfig":"48"},{"size":3456,"mtime":1607355750608,"results":"82","hashOfConfig":"48"},{"size":922,"mtime":1607159786710,"results":"83","hashOfConfig":"48"},{"size":641,"mtime":1607097990060,"results":"84","hashOfConfig":"48"},{"size":1007,"mtime":1607415536264,"results":"85","hashOfConfig":"48"},{"size":458,"mtime":1607358151550,"results":"86","hashOfConfig":"48"},{"size":2027,"mtime":1607247537252,"results":"87","hashOfConfig":"48"},{"size":770,"mtime":1607245901370,"results":"88","hashOfConfig":"48"},{"size":2562,"mtime":1607350655041,"results":"89","hashOfConfig":"48"},{"size":7308,"mtime":1607357506632,"results":"90","hashOfConfig":"48"},{"size":1171,"mtime":1607361744932,"results":"91","hashOfConfig":"48"},{"size":2874,"mtime":1607357451297,"results":"92","hashOfConfig":"48"},{"size":3578,"mtime":1607416916937,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2o9c46",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"117"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/theme.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/mobile.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/navigation.js",[],["197","198"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/desktop.js",[],["199","200"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/index.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/App.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/auth/login.js",[],["201","202"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/rootReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/usersReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/usersActions.js",[],["203","204"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/authActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/axiosConfig.js",[],["205","206"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/authReducers.js",[],["207","208"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/categoriesReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/categoriesActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/localStorageToken.js",[],["209","210"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/handleRequestReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/handleRequestActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/list.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/reportWebVitals.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/table.js",[],["211","212"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableHeader.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableBody.js",["213","214","215","216"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/customDialog.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/appBar.js",[],["217","218"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/helpers/convertFormToFomdata.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/menu.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/userDetail.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/category/categories.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/category/formCategory.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/formUser.js",["219","220","221","222","223","224","225","226","227","228","229"],"import React, {useEffect} from \"react\"\nimport {Avatar, Button, Container, Grid, IconButton, InputAdornment, TextField} from \"@material-ui/core\"\nimport {DropzoneArea} from \"material-ui-dropzone\"\nimport CustomDialog from \"../../custom/customDialog\"\nimport {converFormToFormData} from \"../../../helpers/convertFormToFomdata\"\nimport {createUser, resetState, updateUser} from \"../../../store/actions/usersActions\"\nimport {Controller, useForm} from \"react-hook-form\"\nimport {connect} from \"react-redux\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport CustomAutocomplete from \"../../custom/autocomplete\"\n\nconst useStyle = makeStyles((theme) => ({\n    flex: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    image: {\n        width: '100px',\n        height: '100px'\n    },\n    wrapper: {\n        position: 'relative',\n        margin: theme.spacing(1)\n    }\n}))\n\nconst FormUser = (props) => {\n\n    const options = ['ROLES_USERS', 'ROLES_ALL_ADMIN']\n    const {user, update, create, success, handleDialogClose, reset, handleUpdate} = props\n    const fixedOptions = user ? [\"ROLES_USERS\"] : ['ROLES_ALL_ADMIN', 'ROLES_USERS']\n    const classes = useStyle()\n    const [open, setOpen] = React.useState(false)\n    const [files, setFiles] = React.useState(user ? user.avatar : '')\n    const [showPassword, setShowPassword] = React.useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = React.useState(false)\n\n    useEffect(() => {\n        return () => {\n            if (success) {\n                handleDialogClose()\n                handleUpdate()\n                reset()\n            }\n        }\n    }, [success, handleDialogClose, handleUpdate, reset])\n\n    const defaultValue = user ? {\n        email: user.email,\n        username: user.username,\n        avatar: user.avatar,\n        ROLES: user.ROLES,\n        password: '',\n        confirmPassword: '',\n        deleteAvatar: false\n    } : {\n        email: '',\n        username: '',\n        avatar: '',\n        password: '',\n        confirmPassword: '',\n        deleteAvatar: false,\n        ROLES: [options[0], options[1]]\n    }\n\n    const {handleSubmit, errors, control, getValues} = useForm({\n        mode: \"all\",\n        reValidateMode: 'onChange',\n        defaultValues: defaultValue\n    })\n\n    const onSubmit = (data) => {\n        data.avatar = files\n        const formData = converFormToFormData(data)\n        if (user) {\n            update(formData, user.id)\n        } else {\n            create(formData)\n        }\n\n    }\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n\n    const handleClickShowConfirmPassword = () => {\n        setShowConfirmPassword(!showConfirmPassword)\n    }\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <Container style={{marginTop: 15, marginBottom: 100}}>\n            <form noValidate onSubmit={handleSubmit((data) => onSubmit(data))}>\n                <Grid container spacing={4}>\n                    <Grid item xs={12} className={classes.flex}>\n                        <Button size={\"large\"} onClick={handleOpen}>\n                            {files && typeof files === \"string\" ?\n                                <Avatar alt={\"user avatar\"} className={classes.image}\n                                        src={`${process.env.REACT_APP_BASE_PUBLIC_URL}/${files}`}/> :\n                                <Avatar className={classes.image}> AB </Avatar>\n                            }\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            render={(props) => (\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    error={!!errors.username && !!errors.username.message}\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Pseudo\"\n                                    name=\"username\"\n                                    onChange={props.onChange}\n                                    value={props.value}\n                                    inputRef={props.ref}\n                                    autoFocus\n                                />\n                            )}\n                            name=\"username\"\n                            control={control}\n                            rules={{\n                                required: {\n                                    value: true,\n                                    message: \"Sans pseudo c'est compliqué\"\n                                }\n                            }}\n                        />\n\n                        {errors.usernames && (\n                            <div className=\"error\">{errors.username.message}</div>\n                        )}\n\n                    </Grid>\n                    <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            render={(props) => (\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    error={!!errors.email && !!errors.email.message}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    onChange={props.onChange}\n                                    value={props.value}\n                                    inputRef={props.ref}\n                                />\n                            )}\n                            name=\"email\"\n                            control={control}\n                            rules={{\n                                required: {\n                                    value: true,\n                                    message: \"Sans email c'est compliqué\"\n                                }, pattern: {\n                                    value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                    message: \"C'est un email ça ?\"\n                                }\n                            }}\n                        />\n\n                        {errors.email && (\n                            <div className=\"error\">{errors.email.message}</div>\n                        )}\n\n                    </Grid>\n                    <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            render={({onChange, ...props}) => (\n                                <CustomAutocomplete\n                                    multiple={true}\n                                    value={props.value}\n                                    change={(newValue) => {\n                                        const value = [...fixedOptions, ...newValue.filter((option) => fixedOptions.indexOf(option) === -1)]\n                                        onChange(value)\n                                    }}\n                                    optionLabel={(option) => option}\n                                    optionSelected={(option) => option}\n                                    fixedOptions={fixedOptions}\n                                    options={options}\n                                    label={\"Roles\"}\n                                    id={\"RolesSelect\"}/>\n                            )}\n                            name=\"ROLES\"\n                            onChange={([, data]) => data}\n                            control={control}\n                        />\n                    </Grid>\n                    {!user ? (<> <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            control={control}\n                            name=\"password\"\n                            rules={\n                                {\n                                    required: {\n                                        value: true,\n                                        message: 'Il me faut un mot de passe'\n                                    },\n                                    pattern: {\n                                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.!@#\\?<>\\{\\}\\[\\]\\(\\)\\$%\\^&\\*])(?=.{8,})/,\n                                        message: 'Le mot doit contenir au moins une majuscule,faire au moins 8 caractères,un nombre et un caractère spécial'\n                                    }\n                                }\n                            }\n                            render={(props) => (\n                                <TextField\n                                    fullWidth={true}\n                                    variant={\"outlined\"}\n                                    label={\"Mot de passe\"}\n                                    id=\"password\"\n                                    error={!!errors.password && !!errors.password.message}\n                                    type={showPassword ? 'text' : 'password'}\n                                    onChange={props.onChange}\n                                    value={props.value}\n                                    inputRef={props.ref}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"Montrer le mot de passe\"\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        handleClickShowPassword()\n                                                    }}\n                                                >\n                                                    {showPassword ? <FontAwesomeIcon icon={\"eye\"}/> :\n                                                        <FontAwesomeIcon icon={\"eye-slash\"}/>}\n                                                </IconButton>\n                                            </InputAdornment>)\n                                    }}\n                                />\n                            )}\n                        >\n                        </Controller>\n\n                        {errors.password && (\n                            <div className=\"error\">{errors.password.message}</div>\n                        )}\n\n                    </Grid>\n                        <Grid item xs={12} lg={12} md={12}>\n                            <Controller\n                                control={control}\n                                name=\"confirmPassword\"\n                                rules={\n                                    {\n                                        required: {\n                                            value: true,\n                                            message: 'Il me faut un mot de passe'\n                                        },\n                                        validate: value => {\n                                            if (value === getValues('password')) {\n                                                return true\n                                            } else {\n                                                return 'Les mots de passe ne correspondent pas'\n                                            }\n                                        }\n                                    }\n                                }\n                                render={(props) => (\n                                    <TextField\n                                        fullWidth={true}\n                                        variant={\"outlined\"}\n                                        label={\"Confirmation mot de passe\"}\n                                        id=\"confirmPassword\"\n                                        error={!!errors.confirmPassword && !!errors.confirmPassword.message}\n                                        type={showConfirmPassword ? 'text' : 'password'}\n                                        onChange={props.onChange}\n                                        value={props.value}\n                                        inputRef={props.ref}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        aria-label=\"Montrer le mot de passe\"\n                                                        onClick={(e) => {\n                                                            e.preventDefault();\n                                                            handleClickShowConfirmPassword()\n                                                        }}\n                                                    >\n                                                        {showConfirmPassword ? <FontAwesomeIcon icon={\"eye\"}/> :\n                                                            <FontAwesomeIcon icon={\"eye-slash\"}/>}\n                                                    </IconButton>\n                                                </InputAdornment>)\n                                        }}\n                                    />\n                                )}\n                            >\n                            </Controller>\n\n                            {errors.confirmPassword && (\n                                <div className=\"error\">{errors.confirmPassword.message}</div>\n                            )}\n                        </Grid>\n                    </>) : null}\n                    <CustomDialog isOpen={open} handleClose={handleClose} title={\"Avatar\"}\n                                  dialogActions={[{label: 'Annuler'}, {label: 'Ok'}]}>\n                        <Controller\n                            render={(props) => {\n                                return <DropzoneArea\n                                    dropzoneText={\"Dépose ton avatar ou clique\"}\n                                    acceptedFiles={['image/*']}\n                                    onChange={(files) => {\n                                        if (files.length === 0 && user.avatar) {\n                                            setFiles(user.avatar)\n                                        } else {\n                                            setFiles(files)\n                                        }\n                                    }}\n                                    filesLimit={1}\n                                    maxFileSize={2000000}/>\n                            }}\n                            name={\"avatar\"}\n                            control={control}/>\n                    </CustomDialog>\n                    <Grid item className={classes.flex} xs>\n                        <div className={classes.wrapper}>\n                            <Button type={\"submit\"} variant={\"contained\"} color={\"primary\"}>Envoyer</Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const user = state.request.data.find((item) => {\n        return item.id === ownProps.userId\n    })\n    return {\n        user: user,\n        success: state.users.success,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (data, params) => dispatch(updateUser(data, params)),\n        create: (data) => dispatch(createUser(data)),\n        reset: () => dispatch(resetState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormUser)\n","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/posts.js",["230"],"import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport ReuseCardList from \"../../custom/card/cardList\"\nimport CustomDialog from \"../../custom/customDialog\"\nimport PostDetail from \"./postsDetail\"\nimport {resetState,deletePost, setPublished} from \"../../../store/actions/postsActions\"\nimport {Button} from \"@material-ui/core\"\nimport FormPost from \"./formPosts\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {makeStyles} from \"@material-ui/core/styles\"\n\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        border: 'none',\n        [theme.breakpoints.up('md')]: {\n            float: 'right',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nconst Posts = (props) => {\n\n    const {published, success,deletePost, reset} = props\n    const classes = useStyle()\n    const [openShow, setOpenShow] = React.useState(false)\n    const [edit, setEdit] = React.useState(false)\n    const [open, setOpen] = React.useState(false)\n    const [postId, setPostId] = React.useState()\n    const [needUpdate, setNeedUpdate] = React.useState(false)\n\n    const handleClose = () => {\n        setOpenShow(!openShow)\n    }\n\n    const handleDialog = () => {\n        setOpen(!open)\n        setEdit(false)\n        setPostId(null)\n    }\n\n    const handleUpdate = () => {\n        setNeedUpdate(true)\n    }\n\n    useEffect(() => {\n        if (success) {\n            setNeedUpdate(true)\n            reset()\n        }\n    }, [success, setNeedUpdate])\n\n    return (\n        <React.Fragment>\n            <Button className={classes.root} color={\"primary\"} variant={\"outlined\"} onClick={handleDialog}\n                    startIcon={<FontAwesomeIcon icon={\"plus\"}/>}>Créer</Button>\n            <ReuseCardList\n                needUpdate={needUpdate}\n                options={\n                    {\n                        cardHeader: [{\n                            value: true,\n                            avatar: (row) => `${process.env.REACT_APP_BASE_PUBLIC_URL}/${row.user.avatar}`,\n                            title: (row) => row.title,\n                            subheader: (row) => row.createdAt,\n                            action: [\n                                {\n                                    label: 'Editer',\n                                    handler: (id) => {\n                                        setEdit(true)\n                                        setOpen(true)\n                                        setNeedUpdate(false)\n                                        setPostId(id)\n                                    }\n                                },\n                                {\n                                    label: 'Supprimer',\n                                    handler: (id) => {\n                                        deletePost(id)\n                                    }\n                                }\n                            ]\n                        }],\n                        cardMedia: (row) => row.photos ? `${process.env.REACT_APP_BASE_PUBLIC_URL}/${row.photos[0]}` : `${process.env.REACT_APP_BASE_PUBLIC_URL}/nature.jpg`,\n                        cardContent: (row) => row.content,\n                        cardActions: [\n                            {\n                                label: 'show',\n                                icon: 'eye',\n                                handler: (id) => {\n                                    setPostId(id)\n                                    setOpenShow(true)\n                                    setNeedUpdate(false)\n                                }\n                            }\n                        ],\n                        cardSwitch: {\n                            label: 'Publier',\n                            labelPlacement: 'start',\n                            type: 'switch',\n                            handler: (id, value) => {\n                                published(id, value)\n                            }\n                        },\n                        params: {\n                            query: {\n                                perPage: 10,\n                                page: 0,\n                                order: ['createdAt', 'asc']\n                            },\n                            url: 'posts'\n                        }\n                    }\n                }\n            />\n            <CustomDialog\n                isOpen={openShow}\n                fullScreen={true}\n                handleClose={handleClose}\n                title={'Detail Artcile'}>\n                <PostDetail postId={postId}/>\n            </CustomDialog>\n\n            <CustomDialog\n                title={edit ? \"Editer\" : \"Ajouter un article\"}\n                isOpen={open}\n                fullScreen={true}\n                handleClose={handleDialog}\n            >\n                <FormPost isEdit={edit} postId={postId} handleUpdate={handleUpdate} handleDialogClose={handleDialog}/>\n            </CustomDialog>\n        </React.Fragment>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        success: state.posts.success,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        published: (id, value) => dispatch(setPublished(id, value)),\n        deletePost: (id) => dispatch(deletePost(id)),\n        reset: () => dispatch(resetState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/postsReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users/users.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardList.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardHeader.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardMedia.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardContent.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/postsDetail.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/card/cardSwitch.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/postsActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts/formPosts.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/editor.js",["231"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/autocomplete.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/comments/comments.js",["232","233","234"],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"235","replacedBy":"239"},{"ruleId":"237","replacedBy":"240"},{"ruleId":"235","replacedBy":"241"},{"ruleId":"237","replacedBy":"242"},{"ruleId":"235","replacedBy":"243"},{"ruleId":"237","replacedBy":"244"},{"ruleId":"235","replacedBy":"245"},{"ruleId":"237","replacedBy":"246"},{"ruleId":"235","replacedBy":"247"},{"ruleId":"237","replacedBy":"248"},{"ruleId":"235","replacedBy":"249"},{"ruleId":"237","replacedBy":"250"},{"ruleId":"235","replacedBy":"251"},{"ruleId":"237","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":5,"column":5,"nodeType":"255","messageId":"256","endLine":5,"endColumn":16},{"ruleId":"253","severity":1,"message":"257","line":6,"column":5,"nodeType":"255","messageId":"256","endLine":6,"endColumn":21},{"ruleId":"253","severity":1,"message":"258","line":7,"column":5,"nodeType":"255","messageId":"256","endLine":7,"endColumn":11},{"ruleId":"253","severity":1,"message":"259","line":37,"column":23,"nodeType":"255","messageId":"256","endLine":37,"endColumn":26},{"ruleId":"235","replacedBy":"260"},{"ruleId":"237","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":170,"column":54,"nodeType":"264","messageId":"265","endLine":170,"endColumn":55,"suggestions":"266"},{"ruleId":"262","severity":1,"message":"263","line":170,"column":79,"nodeType":"264","messageId":"265","endLine":170,"endColumn":80,"suggestions":"267"},{"ruleId":"262","severity":1,"message":"268","line":214,"column":93,"nodeType":"264","messageId":"265","endLine":214,"endColumn":94,"suggestions":"269"},{"ruleId":"262","severity":1,"message":"270","line":214,"column":97,"nodeType":"264","messageId":"265","endLine":214,"endColumn":98,"suggestions":"271"},{"ruleId":"262","severity":1,"message":"272","line":214,"column":99,"nodeType":"264","messageId":"265","endLine":214,"endColumn":100,"suggestions":"273"},{"ruleId":"262","severity":1,"message":"263","line":214,"column":101,"nodeType":"264","messageId":"265","endLine":214,"endColumn":102,"suggestions":"274"},{"ruleId":"262","severity":1,"message":"275","line":214,"column":105,"nodeType":"264","messageId":"265","endLine":214,"endColumn":106,"suggestions":"276"},{"ruleId":"262","severity":1,"message":"277","line":214,"column":107,"nodeType":"264","messageId":"265","endLine":214,"endColumn":108,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"279","line":214,"column":109,"nodeType":"264","messageId":"265","endLine":214,"endColumn":110,"suggestions":"280"},{"ruleId":"262","severity":1,"message":"281","line":214,"column":112,"nodeType":"264","messageId":"265","endLine":214,"endColumn":113,"suggestions":"282"},{"ruleId":"262","severity":1,"message":"283","line":214,"column":115,"nodeType":"264","messageId":"265","endLine":214,"endColumn":116,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":52,"column":8,"nodeType":"287","endLine":52,"endColumn":32,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":26,"column":25,"nodeType":"264","messageId":"291","endLine":28,"endColumn":78},{"ruleId":"253","severity":1,"message":"292","line":8,"column":12,"nodeType":"255","messageId":"256","endLine":8,"endColumn":16},{"ruleId":"253","severity":1,"message":"293","line":9,"column":12,"nodeType":"255","messageId":"256","endLine":9,"endColumn":21},{"ruleId":"253","severity":1,"message":"294","line":10,"column":12,"nodeType":"255","messageId":"256","endLine":10,"endColumn":22},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],["295"],["296"],["295"],["296"],["295"],["296"],["295"],["296"],["295"],["296"],["295"],["296"],["295"],["296"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'row' is assigned a value but never used.",["295"],["296"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["297","298"],["299","300"],"Unnecessary escape character: \\?.",["301","302"],"Unnecessary escape character: \\{.",["303","304"],"Unnecessary escape character: \\}.",["305","306"],["307","308"],"Unnecessary escape character: \\(.",["309","310"],"Unnecessary escape character: \\).",["311","312"],"Unnecessary escape character: \\$.",["313","314"],"Unnecessary escape character: \\^.",["315","316"],"Unnecessary escape character: \\*.",["317","318"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["319"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","multilineString","'open' is assigned a value but never used.","'commentId' is assigned a value but never used.","'needUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"320","fix":"321","desc":"322"},{"messageId":"323","fix":"324","desc":"325"},{"messageId":"320","fix":"326","desc":"322"},{"messageId":"323","fix":"327","desc":"325"},{"messageId":"320","fix":"328","desc":"322"},{"messageId":"323","fix":"329","desc":"325"},{"messageId":"320","fix":"330","desc":"322"},{"messageId":"323","fix":"331","desc":"325"},{"messageId":"320","fix":"332","desc":"322"},{"messageId":"323","fix":"333","desc":"325"},{"messageId":"320","fix":"334","desc":"322"},{"messageId":"323","fix":"335","desc":"325"},{"messageId":"320","fix":"336","desc":"322"},{"messageId":"323","fix":"337","desc":"325"},{"messageId":"320","fix":"338","desc":"322"},{"messageId":"323","fix":"339","desc":"325"},{"messageId":"320","fix":"340","desc":"322"},{"messageId":"323","fix":"341","desc":"325"},{"messageId":"320","fix":"342","desc":"322"},{"messageId":"323","fix":"343","desc":"325"},{"messageId":"320","fix":"344","desc":"322"},{"messageId":"323","fix":"345","desc":"325"},{"desc":"346","fix":"347"},"removeEscape",{"range":"348","text":"349"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"350","text":"351"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"352","text":"349"},{"range":"353","text":"351"},{"range":"354","text":"349"},{"range":"355","text":"351"},{"range":"356","text":"349"},{"range":"357","text":"351"},{"range":"358","text":"349"},{"range":"359","text":"351"},{"range":"360","text":"349"},{"range":"361","text":"351"},{"range":"362","text":"349"},{"range":"363","text":"351"},{"range":"364","text":"349"},{"range":"365","text":"351"},{"range":"366","text":"349"},{"range":"367","text":"351"},{"range":"368","text":"349"},{"range":"369","text":"351"},{"range":"370","text":"349"},{"range":"371","text":"351"},"Update the dependencies array to be: [success, setNeedUpdate, reset]",{"range":"372","text":"373"},[6397,6398],"",[6397,6397],"\\",[6422,6423],[6422,6422],[8714,8715],[8714,8714],[8718,8719],[8718,8718],[8720,8721],[8720,8720],[8722,8723],[8722,8722],[8726,8727],[8726,8726],[8728,8729],[8728,8728],[8730,8731],[8730,8730],[8733,8734],[8733,8733],[8736,8737],[8736,8736],[1455,1479],"[success, setNeedUpdate, reset]"]