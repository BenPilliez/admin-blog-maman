[{"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/theme.js":"1","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/mobile.js":"2","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/navigation.js":"3","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/desktop.js":"4","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/index.js":"5","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/App.js":"6","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users.js":"7","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/auth/login.js":"8","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/categories.js":"9","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/rootReducers.js":"10","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/usersReducers.js":"11","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/usersActions.js":"12","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/authActions.js":"13","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/axiosConfig.js":"14","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/authReducers.js":"15","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/categoriesReducers.js":"16","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/categoriesActions.js":"17","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/localStorageToken.js":"18","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/handleRequestReducers.js":"19","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/handleRequestActions.js":"20","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/list.js":"21","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/cardList.js":"22","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/reportWebVitals.js":"23","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts.js":"24","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/table.js":"25","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableHeader.js":"26","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableBody.js":"27","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/customDialog.js":"28","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/appBar.js":"29","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/helpers/convertFormToFomdata.js":"30","/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/formUser.js":"31"},{"size":299,"mtime":1606491133312,"results":"32","hashOfConfig":"33"},{"size":1873,"mtime":1606579601853,"results":"34","hashOfConfig":"33"},{"size":515,"mtime":1606491512759,"results":"35","hashOfConfig":"33"},{"size":3865,"mtime":1606579576151,"results":"36","hashOfConfig":"33"},{"size":1705,"mtime":1607008105001,"results":"37","hashOfConfig":"33"},{"size":1749,"mtime":1606911518141,"results":"38","hashOfConfig":"33"},{"size":4346,"mtime":1607014937184,"results":"39","hashOfConfig":"33"},{"size":5946,"mtime":1607000772800,"results":"40","hashOfConfig":"33"},{"size":2026,"mtime":1606833461514,"results":"41","hashOfConfig":"33"},{"size":429,"mtime":1606641494600,"results":"42","hashOfConfig":"33"},{"size":1092,"mtime":1607012928243,"results":"43","hashOfConfig":"33"},{"size":1758,"mtime":1607013559111,"results":"44","hashOfConfig":"33"},{"size":1136,"mtime":1606983444987,"results":"45","hashOfConfig":"33"},{"size":517,"mtime":1604927976078,"results":"46","hashOfConfig":"33"},{"size":870,"mtime":1606637967592,"results":"47","hashOfConfig":"33"},{"size":1072,"mtime":1606581911704,"results":"48","hashOfConfig":"33"},{"size":602,"mtime":1606581786984,"results":"49","hashOfConfig":"33"},{"size":490,"mtime":1606404198737,"results":"50","hashOfConfig":"33"},{"size":1140,"mtime":1606752425149,"results":"51","hashOfConfig":"33"},{"size":696,"mtime":1606829913482,"results":"52","hashOfConfig":"33"},{"size":3394,"mtime":1606826268413,"results":"53","hashOfConfig":"33"},{"size":3893,"mtime":1606756096814,"results":"54","hashOfConfig":"33"},{"size":362,"mtime":1606310002069,"results":"55","hashOfConfig":"33"},{"size":833,"mtime":1606755581302,"results":"56","hashOfConfig":"33"},{"size":4841,"mtime":1606837560189,"results":"57","hashOfConfig":"33"},{"size":1340,"mtime":1606833962753,"results":"58","hashOfConfig":"33"},{"size":2572,"mtime":1606915442987,"results":"59","hashOfConfig":"33"},{"size":1652,"mtime":1606999384384,"results":"60","hashOfConfig":"33"},{"size":722,"mtime":1606838443828,"results":"61","hashOfConfig":"33"},{"size":535,"mtime":1607011961103,"results":"62","hashOfConfig":"33"},{"size":15750,"mtime":1607014137954,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"2o9c46",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/theme.js",[],["138","139"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/mobile.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/navigation.js",[],["140","141"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/navigations/desktop.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/index.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/App.js",[],["142","143"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/users.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/auth/login.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/categories.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/rootReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/usersReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/usersActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/authActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/axiosConfig.js",[],["144","145"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/authReducers.js",[],["146","147"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/categoriesReducers.js",[],["148","149"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/categoriesActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/config/localStorageToken.js",[],["150","151"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/reducers/handleRequestReducers.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/store/actions/handleRequestActions.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/list.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/cardList.js",["152"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/reportWebVitals.js",[],["153","154"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/posts.js",[],["155","156"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/table.js",[],["157","158"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableHeader.js",[],["159","160"],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/table/tableBody.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/customDialog.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/custom/appBar.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/helpers/convertFormToFomdata.js",[],"/home/ben/Documents/Sites/Blog-maman/admin-blog-maman/src/components/layout/formUser.js",["161","162","163","164","165","166","167","168","169","170","171","172"],"import React, {useEffect} from \"react\"\nimport {Avatar, Button, Chip, Container, Grid, IconButton, InputAdornment, TextField} from \"@material-ui/core\"\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\nimport {DropzoneArea} from \"material-ui-dropzone\"\nimport CustomDialog from \"../custom/customDialog\"\nimport {converFormToFormData} from \"../../helpers/convertFormToFomdata\"\nimport {createUser, resetState, updateUser} from \"../../store/actions/usersActions\"\nimport {Controller, useForm} from \"react-hook-form\"\nimport {connect} from \"react-redux\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {green} from \"@material-ui/core/colors\";\n\n\nconst useStyle = makeStyles((theme) => ({\n    flex: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    image: {\n        width: '100px',\n        height: '100px'\n    },\n    wrapper: {\n        position: 'relative',\n        margin: theme.spacing(1)\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12\n    }\n}))\n\nconst FormUser = (props) => {\n\n    const options = ['ROLES_USERS', 'ROLES_ALL_ADMIN']\n    const {user, update, create, success, handleDialogClose, reset} = props\n    const fixedOptions = user ? [\"ROLES_USERS\"] : ['ROLES_ALL_ADMIN', 'ROLES_USERS']\n    const classes = useStyle()\n    const [open, setOpen] = React.useState(false)\n    const [files, setFiles] = React.useState(user ? user.avatar : '')\n    const [showPassword, setShowPassword] = React.useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = React.useState(false)\n\n    useEffect(() => {\n        if (success) {\n            handleDialogClose()\n            reset()\n        }\n    }, [success])\n\n    const defaultValue = user ? {\n        email: user.email,\n        avatar: user.avatar,\n        ROLES: user.ROLES,\n        password: '',\n        confirmPassword: '',\n        deleteAvatar: false\n    } : {\n        email: '',\n        avatar: '',\n        password: '',\n        confirmPassword: '',\n        deleteAvatar: false,\n        ROLES: [options[0], options[1]]\n    }\n\n    const {handleSubmit, errors, control, getValues} = useForm({\n        mode: \"all\",\n        reValidateMode: 'onChange',\n        defaultValues: defaultValue\n    })\n\n    const onSubmit = (data) => {\n        data.avatar = files\n        const formData = converFormToFormData(data)\n        if (user) {\n            update(formData, user.id)\n        } else {\n            create(formData)\n        }\n\n    }\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n\n    const handleClickShowConfirmPassword = () => {\n        setShowConfirmPassword(!showConfirmPassword)\n    }\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <Container style={{marginTop: 15, marginBottom: 100}}>\n            <form noValidate onSubmit={handleSubmit((data) => onSubmit(data))}>\n                <Grid container spacing={4}>\n                    <Grid item xs={12} className={classes.flex}>\n                        <Button size={\"large\"} onClick={handleOpen}>\n                            {files && typeof files === \"string\" ?\n                                <Avatar alt={\"user avatar\"} className={classes.image}\n                                        src={`${process.env.REACT_APP_BASE_PUBLIC_URL}/${files}`}/> :\n                                <Avatar className={classes.image}> AB </Avatar>\n                            }\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            render={(props) => (\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    error={!!errors.email && !!errors.email.message}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    onChange={props.onChange}\n                                    value={props.value}\n                                    inputRef={props.ref}\n                                    autoFocus\n                                />\n                            )}\n                            name=\"email\"\n                            control={control}\n                            rules={{\n                                required: {\n                                    value: true,\n                                    message: \"Sans email c'est compliqué\"\n                                }, pattern: {\n                                    value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                    message: \"C'est un email ça ?\"\n                                }\n                            }}\n                        />\n\n                        {errors.email && (\n                            <div className=\"error\">{errors.email.message}</div>\n                        )}\n\n                    </Grid>\n                    <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            render={({onChange, ...props}) => (\n                                <Autocomplete\n                                    multiple\n                                    id=\"roles\"\n                                    variant=\"outlined\"\n                                    style={{\n                                        marginTop: '16px',\n                                        marginBottom: '8px'\n                                    }}\n                                    fullWidth\n                                    value={props.value}\n                                    onChange={(event, newValue) => {\n                                        const value = [...fixedOptions, ...newValue.filter((option) => fixedOptions.indexOf(option) === -1)]\n                                        onChange(value)\n                                    }}\n                                    options={options}\n                                    getOptionLabel={(option) => option}\n                                    renderTags={(tagValue, getTagProps) =>\n                                        tagValue.map((option, index) => (\n                                            <Chip\n                                                label={option}\n                                                {...getTagProps({index})}\n                                                disabled={fixedOptions.indexOf(option) !== -1}\n                                            />\n                                        ))\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField {...params} label=\"Roles\" variant=\"outlined\" placeholder=\"Roles\"/>\n                                    )}\n                                />\n                            )}\n                            name=\"ROLES\"\n                            onChange={([, data]) => data}\n                            control={control}\n                        />\n                    </Grid>\n                    {!user ? (<> <Grid item xs={12} lg={12} md={12}>\n                        <Controller\n                            control={control}\n                            name=\"password\"\n                            rules={\n                                {\n                                    required: {\n                                        value: true,\n                                        message: 'Il me faut un mot de passe'\n                                    },\n                                    pattern: {\n                                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.!@#\\?<>\\{\\}\\[\\]\\(\\)\\$%\\^&\\*])(?=.{8,})/,\n                                        message: 'Le mot doit contenir au moins une majuscule,faire au moins 8 caractères,un nombre et un caractère spécial'\n                                    }\n                                }\n                            }\n                            render={(props) => (\n                                <TextField\n                                    fullWidth={true}\n                                    variant={\"outlined\"}\n                                    label={\"Mot de passe\"}\n                                    id=\"password\"\n                                    error={!!errors.password && !!errors.password.message}\n                                    type={showPassword ? 'text' : 'password'}\n                                    onChange={props.onChange}\n                                    value={props.value}\n                                    inputRef={props.ref}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"Montrer le mot de passe\"\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        handleClickShowPassword()\n                                                    }}\n                                                >\n                                                    {showPassword ? <FontAwesomeIcon icon={\"eye\"}/> :\n                                                        <FontAwesomeIcon icon={\"eye-slash\"}/>}\n                                                </IconButton>\n                                            </InputAdornment>)\n                                    }}\n                                />\n                            )}\n                        >\n                        </Controller>\n\n                        {errors.password && (\n                            <div className=\"error\">{errors.password.message}</div>\n                        )}\n\n                    </Grid>\n                        <Grid item xs={12} lg={12} md={12}>\n                            <Controller\n                                control={control}\n                                name=\"confirmPassword\"\n                                rules={\n                                    {\n                                        required: {\n                                            value: true,\n                                            message: 'Il me faut un mot de passe'\n                                        },\n                                        validate: value => {\n                                            if (value === getValues('password')) {\n                                                return true\n                                            } else {\n                                                return 'Les mots de passe ne correspondent pas'\n                                            }\n                                        }\n                                    }\n                                }\n                                render={(props) => (\n                                    <TextField\n                                        fullWidth={true}\n                                        variant={\"outlined\"}\n                                        label={\"Confirmation mot de passe\"}\n                                        id=\"confirmPassword\"\n                                        error={!!errors.confirmPassword && !!errors.confirmPassword.message}\n                                        type={showConfirmPassword ? 'text' : 'password'}\n                                        onChange={props.onChange}\n                                        value={props.value}\n                                        inputRef={props.ref}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        aria-label=\"Montrer le mot de passe\"\n                                                        onClick={(e) => {\n                                                            e.preventDefault();\n                                                            handleClickShowConfirmPassword()\n                                                        }}\n                                                    >\n                                                        {showConfirmPassword ? <FontAwesomeIcon icon={\"eye\"}/> :\n                                                            <FontAwesomeIcon icon={\"eye-slash\"}/>}\n                                                    </IconButton>\n                                                </InputAdornment>)\n                                        }}\n                                    />\n                                )}\n                            >\n                            </Controller>\n\n                            {errors.confirmPassword && (\n                                <div className=\"error\">{errors.confirmPassword.message}</div>\n                            )}\n                        </Grid>\n                    </>) : null}\n                    <CustomDialog isOpen={open} handleClose={handleClose} title={\"Avatar\"}>\n                        <Controller\n                            render={(props) => {\n                                return <DropzoneArea\n                                    dropzoneText={\"Dépose ton avatar ou clique\"}\n                                    acceptedFiles={['image/*']}\n                                    onChange={(files) => {\n                                        if (files.length === 0 && user.avatar) {\n                                            setFiles(user.avatar)\n                                        } else {\n                                            setFiles(files)\n                                        }\n                                    }}\n                                    filesLimit={1}\n                                    maxFileSize={2000000}/>\n                            }}\n                            name={\"avatar\"}\n                            control={control}/>\n                    </CustomDialog>\n                    <Grid item className={classes.flex} xs>\n                        <div className={classes.wrapper}>\n                            <Button type={\"submit\"} variant={\"contained\"} color={\"primary\"}>Envoyer</Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const user = state.request.data.find((item) => {\n        return item.id === ownProps.userId\n    })\n    return {\n        user: user,\n        success: state.users.success,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (data, params) => dispatch(updateUser(data, params)),\n        create: (data) => dispatch(createUser(data)),\n        reset: () => dispatch(resetState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormUser)\n",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"173","replacedBy":"177"},{"ruleId":"175","replacedBy":"178"},{"ruleId":"173","replacedBy":"179"},{"ruleId":"175","replacedBy":"180"},{"ruleId":"173","replacedBy":"181"},{"ruleId":"175","replacedBy":"182"},{"ruleId":"173","replacedBy":"183"},{"ruleId":"175","replacedBy":"184"},{"ruleId":"173","replacedBy":"185"},{"ruleId":"175","replacedBy":"186"},{"ruleId":"173","replacedBy":"187"},{"ruleId":"175","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":17,"column":75,"nodeType":"191","messageId":"192","endLine":17,"endColumn":84},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","replacedBy":"194"},{"ruleId":"173","replacedBy":"195"},{"ruleId":"175","replacedBy":"196"},{"ruleId":"173","replacedBy":"197"},{"ruleId":"175","replacedBy":"198"},{"ruleId":"173","replacedBy":"199"},{"ruleId":"175","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":54,"column":8,"nodeType":"203","endLine":54,"endColumn":17,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":143,"column":54,"nodeType":"207","messageId":"208","endLine":143,"endColumn":55,"suggestions":"209"},{"ruleId":"205","severity":1,"message":"206","line":143,"column":79,"nodeType":"207","messageId":"208","endLine":143,"endColumn":80,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"211","line":203,"column":93,"nodeType":"207","messageId":"208","endLine":203,"endColumn":94,"suggestions":"212"},{"ruleId":"205","severity":1,"message":"213","line":203,"column":97,"nodeType":"207","messageId":"208","endLine":203,"endColumn":98,"suggestions":"214"},{"ruleId":"205","severity":1,"message":"215","line":203,"column":99,"nodeType":"207","messageId":"208","endLine":203,"endColumn":100,"suggestions":"216"},{"ruleId":"205","severity":1,"message":"206","line":203,"column":101,"nodeType":"207","messageId":"208","endLine":203,"endColumn":102,"suggestions":"217"},{"ruleId":"205","severity":1,"message":"218","line":203,"column":105,"nodeType":"207","messageId":"208","endLine":203,"endColumn":106,"suggestions":"219"},{"ruleId":"205","severity":1,"message":"220","line":203,"column":107,"nodeType":"207","messageId":"208","endLine":203,"endColumn":108,"suggestions":"221"},{"ruleId":"205","severity":1,"message":"222","line":203,"column":109,"nodeType":"207","messageId":"208","endLine":203,"endColumn":110,"suggestions":"223"},{"ruleId":"205","severity":1,"message":"224","line":203,"column":112,"nodeType":"207","messageId":"208","endLine":203,"endColumn":113,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"226","line":203,"column":115,"nodeType":"207","messageId":"208","endLine":203,"endColumn":116,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],["228"],["229"],["228"],["229"],["228"],["229"],["228"],["229"],["228"],["229"],["228"],["229"],"no-unused-vars","'loadError' is assigned a value but never used.","Identifier","unusedVar",["228"],["229"],["228"],["229"],["228"],["229"],["228"],["229"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleDialogClose' and 'reset'. Either include them or remove the dependency array.","ArrayExpression",["230"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["231","232"],["233","234"],"Unnecessary escape character: \\?.",["235","236"],"Unnecessary escape character: \\{.",["237","238"],"Unnecessary escape character: \\}.",["239","240"],["241","242"],"Unnecessary escape character: \\(.",["243","244"],"Unnecessary escape character: \\).",["245","246"],"Unnecessary escape character: \\$.",["247","248"],"Unnecessary escape character: \\^.",["249","250"],"Unnecessary escape character: \\*.",["251","252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"messageId":"255","fix":"256","desc":"257"},{"messageId":"258","fix":"259","desc":"260"},{"messageId":"255","fix":"261","desc":"257"},{"messageId":"258","fix":"262","desc":"260"},{"messageId":"255","fix":"263","desc":"257"},{"messageId":"258","fix":"264","desc":"260"},{"messageId":"255","fix":"265","desc":"257"},{"messageId":"258","fix":"266","desc":"260"},{"messageId":"255","fix":"267","desc":"257"},{"messageId":"258","fix":"268","desc":"260"},{"messageId":"255","fix":"269","desc":"257"},{"messageId":"258","fix":"270","desc":"260"},{"messageId":"255","fix":"271","desc":"257"},{"messageId":"258","fix":"272","desc":"260"},{"messageId":"255","fix":"273","desc":"257"},{"messageId":"258","fix":"274","desc":"260"},{"messageId":"255","fix":"275","desc":"257"},{"messageId":"258","fix":"276","desc":"260"},{"messageId":"255","fix":"277","desc":"257"},{"messageId":"258","fix":"278","desc":"260"},{"messageId":"255","fix":"279","desc":"257"},{"messageId":"258","fix":"280","desc":"260"},"Update the dependencies array to be: [handleDialogClose, reset, success]",{"range":"281","text":"282"},"removeEscape",{"range":"283","text":"284"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"285","text":"286"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"287","text":"284"},{"range":"288","text":"286"},{"range":"289","text":"284"},{"range":"290","text":"286"},{"range":"291","text":"284"},{"range":"292","text":"286"},{"range":"293","text":"284"},{"range":"294","text":"286"},{"range":"295","text":"284"},{"range":"296","text":"286"},{"range":"297","text":"284"},{"range":"298","text":"286"},{"range":"299","text":"284"},{"range":"300","text":"286"},{"range":"301","text":"284"},{"range":"302","text":"286"},{"range":"303","text":"284"},{"range":"304","text":"286"},{"range":"305","text":"284"},{"range":"306","text":"286"},[1826,1835],"[handleDialogClose, reset, success]",[4985,4986],"",[4985,4985],"\\",[5010,5011],[5010,5010],[8221,8222],[8221,8221],[8225,8226],[8225,8225],[8227,8228],[8227,8227],[8229,8230],[8229,8229],[8233,8234],[8233,8233],[8235,8236],[8235,8235],[8237,8238],[8237,8237],[8240,8241],[8240,8240],[8243,8244],[8243,8243]]